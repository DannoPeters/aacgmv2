[tox]
envlist =
    clean,
    check,
    py{2.7,3.3,3.4,3.5,3.6},
    py{2.7,3.3,3.4,3.5,3.6}-nocover,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    testfixtures
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test -vv --ignore=src --doctest-glob='*.rst'}

[testenv:py{2.7,3.3,3.4,3.5,3.6}]
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    PY_CCOV=-coverage
usedevelop = true
deps =
    {[testenv]deps}
    pytest-cov
    numpy
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov --cov-report=term-missing -vv --doctest-glob='*.rst'}

[testenv:py{2.7,3.3,3.4,3.5,3.6}-nocover]
deps =
    {[testenv]deps}
    numpy

[testenv:codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []
    
[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinx_rtd_theme
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:check]
deps =
    docutils
#    check-manifest
    flake8
    readme
    pygments
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
#    check-manifest {toxinidir}
    flake8 src tests

[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coveralls --merge=extension-coveralls.json []


[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
usedevelop = false
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:report]
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

[testenv:buildonly-nocover]
deps =
skip_install = true
commands =